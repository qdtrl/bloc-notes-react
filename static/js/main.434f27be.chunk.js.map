{"version":3,"sources":["components/note_presentation/index.jsx","components/side_bar/index.jsx","components/note/index.jsx","components/App.jsx","index.jsx"],"names":["NotePresentation","note","setNoteDisplay","index","onClick","dangerouslySetInnerHTML","converter","Showdown","Converter","content","first","split","second","__html","makeHtml","title","convertText","className","SideBar","notes","saveNotes","event","preventDefault","map","Note","id","console","log","React","useState","noteHtml","setNoteHtml","slice","length","setTitle","setContent","useEffect","fullText","onSubmit","splice","unshift","onChange","target","value","type","App","setNotes","noteDisplay","addedNotes","toSave","JSON","stringify","localStorage","setItem","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.434f27be.chunk.js","sourcesContent":["import Showdown from 'showdown';\n\nconst NotePresentation = ({note, setNoteDisplay, index}) => {\n  const convertText = () => {\n    const converter = new Showdown.Converter();\n    let content = note.content ? note.content : \"No Content\";\n    content = content.split(\"\\n\");\n    const first = content[0] + \"\\n\";\n    const second = content[1] ? content[1] : \"\";\n    return {__html: converter.makeHtml(`${note.title ? note.title : \"# No Title\"}\\n${first + second}`)};\n  }\n\n  return (\n          <li>\n            <div onClick={() => {setNoteDisplay(index);}} dangerouslySetInnerHTML={convertText()} className=\"contentHtml\"></div>\n          </li>\n  )\n};\n\nexport default NotePresentation;","import React from 'react';\nimport NotePresentation from '../note_presentation';\n\nconst SideBar = ({notes, saveNotes, setNoteDisplay}) => {\n  const handleNewNote = (event) => {\n    event.preventDefault();\n    saveNotes([{title: \"# Nouvelle Note\", content: \"Contenue de ma nouvelle note\"}, ...notes]);\n    setNoteDisplay(0);\n  };\n\n  return (\n    <section className=\"sideBar\">\n      <button onClick={handleNewNote}>Ajouter une Note</button>\n      <ul>\n        {\n          notes.map((note, index) => (\n            <NotePresentation\n              note={note}\n              setNoteDisplay={setNoteDisplay}\n              index={index}\n              key={index}\n            />\n          ))\n        }\n      </ul>\n    </section>\n  )\n};\n\nexport default SideBar;","import React from 'react';\nimport Showdown from 'showdown';\n\nconst Note = ({id, notes, saveNotes}) => {\n  console.log(`On note : ${id} via Note`);\n  const [noteHtml, setNoteHtml] = React.useState();\n  const [title, setTitle] = React.useState(notes[id].title.slice(2, notes[id].title.length));\n  const [content, setContent] = React.useState(notes[id].content);\n\n  const handleChangeTitle = (event) => {\n    setTitle(event.target.value);\n  }\n  \n  const handleChangeContent = (event) => {\n    setContent(event.target.value);\n  }\n\n  const displayNoteHtml = () => {\n    return {__html: noteHtml};\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    notes.splice(id, 1);\n    notes.unshift({title: `# ${title}`, content: content});\n    saveNotes(notes);\n  }\n\n  React.useEffect(() => {\n    const converter = new Showdown.Converter();\n    const fullText = \"# \" + title + \"\\n\" + content;\n    setNoteHtml(converter.makeHtml(fullText));\n  }, [title, content])\n\n  React.useEffect(() => {\n    setTitle(notes[id].title.slice(2, notes[id].title.length))\n    setContent(notes[id].content)\n  }, [id])\n\n  return (\n    <section className=\"note\">\n      <div dangerouslySetInnerHTML={displayNoteHtml()} className=\"noteHtml\"></div>\n      <form onSubmit={handleSubmit}>\n        <input onChange={handleChangeTitle} className=\"title\" value={title} type=\"text\"/>\n        <textarea  onChange={handleChangeContent} className=\"content\" value={content} type=\"text\"/>\n        <button type=\"submit\">Sauvegarder</button>\n      </form>\n    </section>\n  )\n};\n\nexport default Note;","import React from 'react';\nimport SideBar from './side_bar';\nimport Note from './note';\n\nconst App = () => {\n  const getNotes = () => {\n    const loadData = JSON.parse(localStorage.getItem('bloc-noteData'));\n    return loadData ? loadData : [{title: \"# New note\", content: \"Empty content\"}] ;\n  };\n\n  const [notes, setNotes] = React.useState([]);\n  const [noteDisplay, setNoteDisplay] = React.useState(false);\n  \n  const saveNotes = (addedNotes) => {\n    const toSave = JSON.stringify(addedNotes)\n    localStorage.setItem('bloc-noteData', toSave);\n    setNotes(getNotes());\n  };\n  \n  console.log(`On note : ${noteDisplay} via app`);\n\n  return (\n    <>\n      {\n        notes &&\n        <SideBar\n          notes={notes}\n          setNotes={setNotes}\n          saveNotes={saveNotes}\n          setNoteDisplay={setNoteDisplay}\n        />  \n      }  \n      { \n        (noteDisplay !== false) &&\n        <Note\n          id={noteDisplay}\n          notes={notes}\n          saveNotes={saveNotes}\n        /> \n      }\n    </>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}